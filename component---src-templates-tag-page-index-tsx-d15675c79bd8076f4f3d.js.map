{"version":3,"file":"component---src-templates-tag-page-index-tsx-d15675c79bd8076f4f3d.js","mappings":"gJAyEA,UApE6C,SAAC,GAAoD,MAAlDA,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,SAA4C,IAAlCC,YAAeC,EAAmB,EAAnBA,IACvEC,GAD0F,EAAdC,MACpEL,EAAKM,OAAOC,OACpBC,GAAY,UAAAR,EAAKS,KAAKC,oBAAV,eAAwBC,QAAxB,QAElB,OACE,gBAAC,KAAD,CAAQV,SAAUA,EAAUU,MAAOH,GACjC,gBAAC,KAAD,CAAKG,MAAK,yBAA2BR,IACrC,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAaS,SAAS,WAAWC,KAAMV,IACvC,sBAAIW,UAAU,8DACXV,EAAMW,KAAI,YAA+B,IAA5BC,EAA4B,EAA5BA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OACE,sBACEC,IAAKJ,EAAKE,OAAOC,KACjBL,UAAU,mHAEV,2BACEO,WAAS,EACTC,SAAS,4BACTR,UAAU,wBAEV,0BAAQA,UAAU,kBAChB,sBAAIA,UAAU,sEACZ,gBAAC,EAAAS,KAAD,CACEC,GAAIR,EAAKE,OAAOC,KAChBP,SAAS,MACTE,UAAU,4BAEV,wBAAMF,SAAS,YAAYD,IAE7B,wBAAMG,UAAU,8DAAhB,KAGA,uBAAKA,UAAU,+CACZE,EAAKC,YAAYQ,SAIxB,2BAASX,UAAU,UACjB,qBACEY,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYW,aAE3BhB,SAAS,cACTE,UAAU,wCAEZ,gBAAC,KAAD,CAAMe,KAAMb,EAAKC,YAAYY,QAE/B,0BAAQf,UAAU,yFAChB,wBAAMA,UAAU,sBACbE,EAAKC,YAAYa,MAEpB,gBAAC,EAAAP,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMP,SAAS,MAAME,UAAU,IACnD","sources":["webpack://fisklay/./src/templates/TagPage/index.tsx"],"sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { INode, PageProps } from \"@/definitions\"\nimport { Layout, PageHeading, Container, Tags, Seo } from \"@/components\"\n\nconst TagPageTemplate: React.FC<PageProps> = ({ data, location, pageContext: { tag, slugs } }) => {\n  const posts = data.allMdx.edges\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title={` Articles taged with #${tag}`} />\n      <Container>\n        <PageHeading itemProp=\"headline\" text={tag} />\n        <ol className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 -mx-4\">\n          {posts.map(({ node }: { node: INode }) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <li\n                key={node.fields.slug}\n                className=\"rounded-2xl p-4 group bg-skin-base shadow hover:shadow-light hover:z-10 hover:bg-skin-base-flash transition-all\"\n              >\n                <article\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                  className=\"flex flex-col h-full\"\n                >\n                  <header className=\"flex space-x-2\">\n                    <h2 className=\"text-3xl font-display mt-3 group-hover:text-skin-fg transition-all\">\n                      <Link\n                        to={node.fields.slug}\n                        itemProp=\"url\"\n                        className=\"group-hover:text-skin-fg\"\n                      >\n                        <span itemProp=\"headline\">{title}</span>\n                      </Link>\n                      <span className=\"opacity-0 group-hover:opacity-100 ml-0.5 text-skin-primary\">\n                        .\n                      </span>\n                      <sup className=\"font-mono text-skin-fg-muted text-sm -top-4\">\n                        {node.frontmatter.order}\n                      </sup>\n                    </h2>\n                  </header>\n                  <section className=\"flex-1\">\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: node.frontmatter.description,\n                      }}\n                      itemProp=\"description\"\n                      className=\"text-lg font-yrsa text-skin-fg mt-3\"\n                    />\n                    <Tags tags={node.frontmatter.tags} />\n                  </section>\n                  <footer className=\"flex justify-between font-mono text-xs mt-2 pt-2 border-t border-skin-base-muted mt-2\">\n                    <span className=\"text-skin-fg-muted\">\n                      {node.frontmatter.date}\n                    </span>\n                    <Link to={node.fields.slug} itemProp=\"url\" className=\"\">\n                      <span>Read</span>\n                    </Link>\n                  </footer>\n                </article>\n              </li>\n            )\n          })}\n        </ol>\n\n      </Container>\n    </Layout>\n  )\n}\n\nexport default TagPageTemplate\n\nexport const pageQuery = graphql`\n  query ($slugs: [String]) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      sort: { fields: frontmatter___order, order: ASC }\n      filter: { slug: { in: $slugs } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            order\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["data","location","pageContext","tag","posts","slugs","allMdx","edges","siteTitle","site","siteMetadata","title","itemProp","text","className","map","node","frontmatter","fields","slug","key","itemScope","itemType","Link","to","order","dangerouslySetInnerHTML","__html","description","tags","date"],"sourceRoot":""}